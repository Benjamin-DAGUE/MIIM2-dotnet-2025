// <auto-generated />
using System;
using Keepass.DBLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Keepass.DBLib.Migrations
{
    [DbContext(typeof(KeepassDBContext))]
    partial class KeepassDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("AppUserVault", b =>
                {
                    b.Property<int>("SharedUsersIdentifier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SharedVaultsIdentifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("SharedUsersIdentifier", "SharedVaultsIdentifier");

                    b.HasIndex("SharedVaultsIdentifier");

                    b.ToTable("AppUserVault");
                });

            modelBuilder.Entity("Keepass.DBLib.AppUser", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("EntraID")
                        .HasColumnType("TEXT");

                    b.HasKey("Identifier");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Keepass.DBLib.Vault", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserIdentifier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Identifier");

                    b.HasIndex("AppUserIdentifier", "Name")
                        .IsUnique();

                    b.ToTable("Vaults");
                });

            modelBuilder.Entity("Keepass.DBLib.VaultEntry", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("VaultIdentifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("Identifier");

                    b.HasIndex("VaultIdentifier");

                    b.ToTable("VaultEntries");
                });

            modelBuilder.Entity("AppUserVault", b =>
                {
                    b.HasOne("Keepass.DBLib.AppUser", null)
                        .WithMany()
                        .HasForeignKey("SharedUsersIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Keepass.DBLib.Vault", null)
                        .WithMany()
                        .HasForeignKey("SharedVaultsIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Keepass.DBLib.Vault", b =>
                {
                    b.HasOne("Keepass.DBLib.AppUser", "Creator")
                        .WithMany("Vaults")
                        .HasForeignKey("AppUserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Keepass.DBLib.VaultEntry", b =>
                {
                    b.HasOne("Keepass.DBLib.Vault", "Vault")
                        .WithMany("Entries")
                        .HasForeignKey("VaultIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vault");
                });

            modelBuilder.Entity("Keepass.DBLib.AppUser", b =>
                {
                    b.Navigation("Vaults");
                });

            modelBuilder.Entity("Keepass.DBLib.Vault", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
